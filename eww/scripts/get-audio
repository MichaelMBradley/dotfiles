#!/bin/env sh

volume() {
	pactl get-sink-volume @DEFAULT_SINK@ | rg 'Volume: front-left:\s+\d+\s+/\s+(\d+)%' -or '$1' --color=never
}

mute() {
	if [[ "$(pactl get-sink-mute @DEFAULT_SINK@)" =~ 'yes' ]]; then
		echo "true"
	else
		echo "false"
	fi
}

HEADPHONES='alsa_output.usb-Audeze_LLC_Audeze_Maxwell_Dongle_0000000000000000-01.analog-stereo'
HEADPHONES_ICON='󰋋'
SPEAKERS='alsa_output.usb-Generic_USB_Audio-00.HiFi__hw_Audio_1__sink'
SPEAKERS_ICON='󰓃'
UNKNOWN_ICON='?'

audio_sink() {
	case "$(pactl get-default-sink)" in
		"$HEADPHONES") echo $HEADPHONES_ICON
		;;
		"$SPEAKERS") echo $SPEAKERS_ICON
		;;
		*) echo $UNKNOWN_ICONN
		;;
	esac
}

HEADPHONE_MIC='alsa_input.usb-Audeze_LLC_Audeze_Maxwell_Dongle_0000000000000000-01.mono-fallback'
HEADPHONE_MIC_ICON='󰋎'
BLUE='alsa_input.usb-Generic_Blue_Microphones_LT_2007151539505F39045F_111000-00.analog-stereo'
BLUE_ICON=''

audio_source() {
	case "$(pactl get-default-source)" in
		"$HEADPHONE_MIC") echo $HEADPHONE_MIC_ICON
		;;
		"$BLUE") echo $BLUE_ICON
		;;
		*) echo $UNKNOWN_ICONN
		;;
	esac
}

audio() {
	echo "{\"volume\":$(volume),\"muted\":$(mute),\"sink\":\"$(audio_sink)\",\"source\":\"$(audio_source)\"}"
}

audio
pactl subscribe | while read -r LINE; do
	if [[ "$LINE" =~ 'change' ]]; then
		audio
	fi
done

