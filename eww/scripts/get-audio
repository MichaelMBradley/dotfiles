#!/bin/env sh

volume() {
	pactl get-sink-volume @DEFAULT_SINK@ | rg 'Volume: front-left:\s+\d+\s+/\s+(\d+)%' -or '$1' --color=never
}

mute() {
	if [[ "$(pactl get-sink-mute @DEFAULT_SINK@)" =~ 'yes' ]]; then
		echo "true"
	else
		echo "false"
	fi
}

get_device_id() {
	~/.config/eww/scripts/get-audio-device-id "$1"
}

HEADPHONES="$(get_device_id 'headphones')"
HEADPHONES_ICON='󰋋'
SPEAKERS="$(get_device_id 'speakers')"
SPEAKERS_ICON='󰓃'
UNKNOWN_ICON='?'

audio_sink() {
	case "$(pactl get-default-sink)" in
		"$HEADPHONES") echo $HEADPHONES_ICON
		;;
		"$SPEAKERS") echo $SPEAKERS_ICON
		;;
		*) echo $UNKNOWN_ICON
		;;
	esac
}

HEADPHONE_MIC="$(get_device_id 'headphone_mic')"
HEADPHONE_MIC_ICON='󰋎'
BLUE_MIC="$(get_device_id 'blue_mic')"
BLUE_MIC_ICON=''

audio_source() {
	case "$(pactl get-default-source)" in
		"$HEADPHONE_MIC") echo $HEADPHONE_MIC_ICON
		;;
		"$BLUE_MIC") echo $BLUE_MIC_ICON
		;;
		*) echo $UNKNOWN_ICON
		;;
	esac
}

audio() {
	echo "{\"volume\":$(volume),\"muted\":$(mute),\"sink\":\"$(audio_sink)\",\"source\":\"$(audio_source)\"}"
}

audio
sleep 3
audio
pactl subscribe | while read -r LINE; do
	if [[ "$LINE" =~ 'change' ]]; then
		audio
	fi
done

